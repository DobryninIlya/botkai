<<<<<<< HEAD
# Byte-compiled / optimized / DLL files
__pycache__/
=======
*.pyc
*.log
*.pot
db.sqlite3
myvenv
env
venv
virtual environment
__pycache__
.vscode
local_settings.py
.DS_Store
/.idea
/.vscode
*~
Bez_imeni-1.png
./idea/
*s.xml
*.ics

# Created by https://www.toptal.com/developers/gitignore/api/django
# Edit at https://www.toptal.com/developers/gitignore?templates=django

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
media

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# <django-project-name>/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
>>>>>>> 163c86b8f85bdc96860afe673ada3ac8186209c8
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
<<<<<<< HEAD
lib/
lib64/
=======
>>>>>>> 163c86b8f85bdc96860afe673ada3ac8186209c8
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
<<<<<<< HEAD

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
=======
pytestdebug.log

# Translations
*.mo

# Django stuff:
>>>>>>> 163c86b8f85bdc96860afe673ada3ac8186209c8

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
<<<<<<< HEAD
=======
doc/_build/
>>>>>>> 163c86b8f85bdc96860afe673ada3ac8186209c8

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

<<<<<<< HEAD
=======
# poetry
#poetry.lock

>>>>>>> 163c86b8f85bdc96860afe673ada3ac8186209c8
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
<<<<<<< HEAD
.env
.venv
=======
# .env
.env/
.venv/
>>>>>>> 163c86b8f85bdc96860afe673ada3ac8186209c8
env/
venv/
ENV/
env.bak/
venv.bak/
<<<<<<< HEAD
=======
pythonenv*
>>>>>>> 163c86b8f85bdc96860afe673ada3ac8186209c8

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
<<<<<<< HEAD
.db
.idea
templates/
=======

# pytype static type analyzer
.pytype/

# operating system-related files
*.DS_Store #file properties cache/storage on macOS
Thumbs.db #thumbnail cache on Windows

# profiling data
.prof

--wait.txt
.db
.pyc
# End of https://www.toptal.com/developers/gitignore/api/django


>>>>>>> 163c86b8f85bdc96860afe673ada3ac8186209c8
